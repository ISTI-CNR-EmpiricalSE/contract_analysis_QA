{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  data() {\n    return {\n      text: null,\n      txt_file: null,\n      editing: false,\n      editText: null,\n      edited: \"false\",\n      txt_high: null\n    };\n  },\n  methods: {\n    uploadFile() {\n      let formData = new FormData();\n      formData.append(\"file\", this.$refs.file.files[0]);\n      let file = this.$refs.file.files[0];\n      if (file.type === \"application/pdf\") {\n        axios.post(\"http://localhost:8000/api/pdf-upload/\", formData).then(response => {\n          this.text = response.data.pdf_text;\n          this.txt_file = response.data.txt_file_pdf;\n        }).catch(error => {\n          console.log(error);\n        });\n      } else if (file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/msword\") {\n        axios.post(\"http://localhost:8000/api/word-upload/\", formData).then(response => {\n          this.text = response.data.doc_text;\n          this.txt_file = response.data.txt_file_docx;\n        }).catch(error => {\n          console.log(error);\n        });\n      } else if (file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\n        axios.post(\"http://localhost:8000/api/xlsx-upload/\", formData).then(response => {\n          this.text = response.data.xlsx_text;\n          this.txt_file = response.data.txt_file_xlsx;\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert(\"Unsupported file type\");\n      }\n    },\n    updateText() {\n      axios.post(\"http://localhost:8000/api/update-text/\", {\n        text_toEdit: this.editText,\n        file_toEdit: this.txt_file,\n        edited: this.edited\n      }).then(response => {\n        this.text = this.editText;\n        this.txt_file = response.data.txt_file_edited;\n        this.editing = false;\n        this.edited = \"true\";\n      }).catch(error => {\n        console.log(error);\n      });\n    },\n    highlightText() {\n      axios.post(\"http://localhost:8000/api/highlight-text/\", {\n        text_to_high: this.text\n      }).then(response => {\n        this.txt_high = response.data.textHighlighted;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","text","txt_file","editing","editText","edited","txt_high","methods","uploadFile","formData","FormData","append","$refs","file","files","type","post","then","response","pdf_text","txt_file_pdf","catch","error","console","log","doc_text","txt_file_docx","xlsx_text","txt_file_xlsx","alert","updateText","text_toEdit","file_toEdit","txt_file_edited","highlightText","text_to_high","textHighlighted"],"sources":["src/components/UploadEdit.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <form @submit.prevent=\"uploadFile\">\r\n            <input type=\"file\" ref=\"file\" accept=\".pdf,.docx, .xlsx\" />\r\n            <button type=\"submit\">Upload</button>\r\n        </form>\r\n        <div v-if=\"text\">\r\n            <h2>Extracted text</h2>\r\n            <div>\r\n                <textarea v-if=\"!editing\" v-model=\"text\" style=\"width: 50%; height: 300px;\" readonly></textarea>\r\n                <textarea v-if=\"editing\" v-model=\"editText\" style=\"width: 50%; height: 300px;\"></textarea>\r\n                <button v-if=\"!editing\" @click=\"editText = text; editing = true\">Edit</button>\r\n                <button v-if=\"editing\" @click=\"updateText\">Save</button>\r\n                <button v-if=\"editing\" @click=\"editing = false\">Cancel</button>\r\n                <button @click=\"highlightText\">HighLight</button>  \r\n            </div>\r\n        </div>\r\n        <div v-if=\"txt_high\">\r\n            \r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            text: null,\r\n            txt_file: null,\r\n            editing: false,\r\n            editText: null,\r\n            edited: \"false\",\r\n            txt_high: null\r\n            \r\n        };\r\n    },\r\n    methods: {\r\n        uploadFile() {\r\n            let formData = new FormData();\r\n            formData.append(\"file\", this.$refs.file.files[0]);\r\n\r\n            let file = this.$refs.file.files[0];\r\n\r\n            if (file.type === \"application/pdf\") {\r\n                axios\r\n                    .post(\"http://localhost:8000/api/pdf-upload/\", formData)\r\n                    .then(response => {\r\n                        this.text = response.data.pdf_text;\r\n                        this.txt_file = response.data.txt_file_pdf\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            } else if (file.type === \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\" || file.type === \"application/msword\") {\r\n                axios\r\n                    .post(\"http://localhost:8000/api/word-upload/\", formData)\r\n                    .then(response => {\r\n                        this.text = response.data.doc_text;\r\n                        this.txt_file = response.data.txt_file_docx\r\n\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            } else if (file.type === \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\") {\r\n                axios\r\n                    .post(\"http://localhost:8000/api/xlsx-upload/\", formData)\r\n                    .then(response => {\r\n                        this.text = response.data.xlsx_text;\r\n                        this.txt_file = response.data.txt_file_xlsx\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(error);\r\n                    });\r\n            } else {\r\n                alert(\"Unsupported file type\");\r\n            }\r\n        },\r\n        updateText() {\r\n            axios.post(\"http://localhost:8000/api/update-text/\", { text_toEdit: this.editText, file_toEdit: this.txt_file, edited: this.edited })\r\n                .then(response => {\r\n                    this.text = this.editText;\r\n                    this.txt_file = response.data.txt_file_edited;\r\n                    this.editing = false;\r\n                    this.edited = \"true\"\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                });\r\n        },\r\n\r\n        highlightText(){\r\n            axios.post(\"http://localhost:8000/api/highlight-text/\", {text_to_high: this.text})\r\n                .then(response => {\r\n                        this.txt_high = response.data.textHighlighted\r\n                    })\r\n                .catch(error => {\r\n                        console.log(error);\r\n                });\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"AAwBA,OAAAA,KAAA;AAEA;EACAC,KAAA;IACA;MACAC,IAAA;MACAC,QAAA;MACAC,OAAA;MACAC,QAAA;MACAC,MAAA;MACAC,QAAA;IAEA;EACA;EACAC,OAAA;IACAC,WAAA;MACA,IAAAC,QAAA,OAAAC,QAAA;MACAD,QAAA,CAAAE,MAAA,cAAAC,KAAA,CAAAC,IAAA,CAAAC,KAAA;MAEA,IAAAD,IAAA,QAAAD,KAAA,CAAAC,IAAA,CAAAC,KAAA;MAEA,IAAAD,IAAA,CAAAE,IAAA;QACAhB,KAAA,CACAiB,IAAA,0CAAAP,QAAA,EACAQ,IAAA,CAAAC,QAAA;UACA,KAAAjB,IAAA,GAAAiB,QAAA,CAAAlB,IAAA,CAAAmB,QAAA;UACA,KAAAjB,QAAA,GAAAgB,QAAA,CAAAlB,IAAA,CAAAoB,YAAA;QACA,GACAC,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA,WAAAT,IAAA,CAAAE,IAAA,kFAAAF,IAAA,CAAAE,IAAA;QACAhB,KAAA,CACAiB,IAAA,2CAAAP,QAAA,EACAQ,IAAA,CAAAC,QAAA;UACA,KAAAjB,IAAA,GAAAiB,QAAA,CAAAlB,IAAA,CAAAyB,QAAA;UACA,KAAAvB,QAAA,GAAAgB,QAAA,CAAAlB,IAAA,CAAA0B,aAAA;QAEA,GACAL,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA,WAAAT,IAAA,CAAAE,IAAA;QACAhB,KAAA,CACAiB,IAAA,2CAAAP,QAAA,EACAQ,IAAA,CAAAC,QAAA;UACA,KAAAjB,IAAA,GAAAiB,QAAA,CAAAlB,IAAA,CAAA2B,SAAA;UACA,KAAAzB,QAAA,GAAAgB,QAAA,CAAAlB,IAAA,CAAA4B,aAAA;QACA,GACAP,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA;MACA;QACAO,KAAA;MACA;IACA;IACAC,WAAA;MACA/B,KAAA,CAAAiB,IAAA;QAAAe,WAAA,OAAA3B,QAAA;QAAA4B,WAAA,OAAA9B,QAAA;QAAAG,MAAA,OAAAA;MAAA,GACAY,IAAA,CAAAC,QAAA;QACA,KAAAjB,IAAA,QAAAG,QAAA;QACA,KAAAF,QAAA,GAAAgB,QAAA,CAAAlB,IAAA,CAAAiC,eAAA;QACA,KAAA9B,OAAA;QACA,KAAAE,MAAA;MACA,GACAgB,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;IAEAY,cAAA;MACAnC,KAAA,CAAAiB,IAAA;QAAAmB,YAAA,OAAAlC;MAAA,GACAgB,IAAA,CAAAC,QAAA;QACA,KAAAZ,QAAA,GAAAY,QAAA,CAAAlB,IAAA,CAAAoC,eAAA;MACA,GACAf,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}